runs:
  using: 'composite'
  steps:
    - name: Check for nix ‚úÖ
      id: check-nix
      shell: bash
      run: |
        if command -v nix &> /dev/null
        then
          echo "nix-found=true" | tee -a $GITHUB_OUTPUT
        else
          echo "nix-found=false" | tee -a $GITHUB_OUTPUT
        fi

    # TODO: Replace with action once released
    - name: Install Lix ‚ùÑÔ∏è
      if: steps.check-nix.outputs.nix-found == 'false'
      shell: bash
      run: |
        curl -sSf -L https://install.lix.systems/lix | sudo sh -s -- install --no-confirm

    - name: Configure nix üîß
      if: steps.check-nix.outputs.nix-found == 'false'
      shell: bash
      run: |
        cat <<EOF | sudo tee -a /etc/nix/nix.conf > /dev/null
        extra-substituters = https://nzbr-nix-cache.s3.eu-central-1.wasabisys.com
        extra-trusted-public-keys = nzbr-nix-cache.s3.eu-central-1.wasabisys.com:3BzCCe4Frvvwamd5wibtMAcEKwbVs4y2xKUR2vQ8gIo=
        access-tokens = github.com=${{ github.token }}
        EOF

    - name: Configure shell üîß
      if: steps.check-nix.outputs.nix-found == 'false'
      shell: bash
      run: |
        . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
        echo "NIX_PROFILES=${NIX_PROFILES}" | tee -a $GITHUB_ENV
        echo "NIX_SSL_CERT_FILE=${NIX_SSL_CERT_FILE}" | tee -a $GITHUB_ENV
        echo "XDG_DATA_DIRS=${XDG_DATA_DIRS}" | tee -a $GITHUB_ENV
        echo "PATH=${PATH}" | tee -a $GITHUB_ENV

    - name: Print nix version
      if: steps.check-nix.outputs.nix-found == 'false'
      shell: bash
      run: |
        nix --version

    - name: Print nix config
      if: steps.check-nix.outputs.nix-found == 'false'
      shell: bash
      run: |
        grep -v access-tokens /etc/nix/nix.conf # Hide github token
